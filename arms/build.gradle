apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    //support
    api rootProject.ext.dependencies["appcompat"]
    api rootProject.ext.dependencies["recyclerview"]
    api rootProject.ext.dependencies["material"]
    api rootProject.ext.dependencies["constraintLayout"]
    api rootProject.ext.dependencies["annotation"]

    //view
    api rootProject.ext.dependencies["butterKnife"]
    api rootProject.ext.dependencies["recyclerViewDivider"]

    //rx
    api rootProject.ext.dependencies["rxJava"]
    api(rootProject.ext.dependencies["rxAndroid"]) {
        exclude module: 'rxjava'
    }
    api(rootProject.ext.dependencies["rxCache"]) {
        exclude module: 'rxjava'
        exclude module: 'dagger'
        exclude module: 'api'
    }
    api(rootProject.ext.dependencies["rxCacheJolyglotGson"]) {
        exclude module: 'gson'
    }
    api(rootProject.ext.dependencies["rxLifecycle"]) {
        exclude module: 'rxjava'
        exclude module: 'jsr305'
    }
    api(rootProject.ext.dependencies["rxLifecycleAndroid"]) {
        exclude module: 'support-annotations'
        exclude module: 'rxjava'
        exclude module: 'rxandroid'
        exclude module: 'rxlifecycle'
    }
    api(rootProject.ext.dependencies["rxPermissions"]) {
        exclude module: 'rxjava'
        exclude module: 'support-annotations'
    }
    api rootProject.ext.dependencies["rxErrorHandler"]

//network
    api(rootProject.ext.dependencies["retrofit"]) {
        exclude module: 'okhttp'
        exclude module: 'okio'
    }
    api(rootProject.ext.dependencies["retrofitConverterGson"]) {
        exclude module: 'gson'
        exclude module: 'okhttp'
        exclude module: 'okio'
        exclude module: 'retrofit'
    }
    api(rootProject.ext.dependencies["retrofitAdapterRxjava"]) {
        exclude module: 'rxjava'
        exclude module: 'okhttp'
        exclude module: 'retrofit'
        exclude module: 'okio'
    }
    api rootProject.ext.dependencies["okhttp"]
    api rootProject.ext.dependencies["glide"]
    annotationProcessor rootProject.ext.dependencies["annotation"]
    annotationProcessor(rootProject.ext.dependencies["glideCompiler"]) {
        exclude module: 'jsr305'
    }

    //tools
    api rootProject.ext.dependencies["dagger"]
    annotationProcessor rootProject.ext.dependencies["daggerCompiler"]
    compileOnly rootProject.ext.dependencies["eventbus"]
    api rootProject.ext.dependencies["gson"]

    //test
    api rootProject.ext.dependencies["timber"]
}
